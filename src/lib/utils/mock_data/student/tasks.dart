import 'package:src/models/student/task.dart';
import 'package:src/utils/enums.dart';

final mockTasks = [
  Task(
      name: 'Install flutter packages',
      description: 'Run flutter pub get',
      priority: Priority.high,
      deadline: DateTime.now().subtract(const Duration(days: 1)),
      taskGroupId: 1,
      subjectId: 1,
      xp: 10,
      finished: false),
  Task(
      name: 'Setup database seeding',
      description: 'Put mock data in the database',
      priority: Priority.high,
      deadline: DateTime.now(),
      taskGroupId: 1,
      subjectId: 1,
      xp: 0,
      finished: false),
  Task(
      name: 'Frontend development',
      description: 'Create the frontend of the app',
      priority: Priority.high,
      deadline: DateTime.now().add(const Duration(hours: 7)),
      taskGroupId: 1,
      subjectId: 1,
      xp: 0,
      finished: false),
  Task(
      name: 'Dentist appointment',
      description: 'Get braces',
      priority: Priority.high,
      deadline: DateTime.now(),
      xp: 0,
      finished: true),
  Task(
      name: 'Stupid 1',
      description: 'Get braces',
      priority: Priority.high,
      deadline: DateTime(2021, 10, 10),
      xp: 0,
      taskGroupId: 2,
      subjectId: 1,
      finished: true,
      finishedAt: DateTime(2021, 10, 10)),
  Task(
    name: 'Dentist appointment',
    description: 'Get braces',
    priority: Priority.high,
    deadline: DateTime(2021, 10, 10),
    xp: 0,
    taskGroupId: 2,
    subjectId: 1,
    finished: true,
    finishedAt: DateTime(2021, 10, 10),
  ),
  Task(
    name: 'Check ingredients',
    description: 'Open the fridge',
    priority: Priority.high,
    deadline: DateTime.now().subtract(const Duration(hours:1)),
    xp: 0,
    taskGroupId: 3,
    subjectId: 1,
    finished: true,
    finishedAt: DateTime.now().subtract(const Duration(days: 1)),
  ),
  Task(
    name: 'Boil water',
    description: 'Put wattle in the kettle',
    priority: Priority.high,
    deadline: DateTime.now().subtract(const Duration(hours:1)),
    xp: 0,
    taskGroupId: 3,
    subjectId: 1,
    finished: true,
    finishedAt: DateTime.now().subtract(const Duration(days: 1)),
  ),
  Task(
    name: 'Heat up the oven',
    description: 'Turn up the heat',
    priority: Priority.high,
    deadline: DateTime.now().subtract(const Duration(hours:1)),
    xp: 0,
    taskGroupId: 3,
    subjectId: 1,
    finished: true,
    finishedAt: DateTime.now().subtract(const Duration(days: 1)),
  ),
  Task(
    name: 'Do laundry',
    description: 'Take clothes out of the washing machine',
    priority: Priority.high,
    deadline: DateTime.now().subtract(const Duration(hours:1)),
    xp: 0,
    taskGroupId: 4,
    subjectId: 1,
    finished: true,
    finishedAt: DateTime.now().subtract(const Duration(days: 1)),
  ),
  Task(
    name: 'Make beds',
    description: 'Change the sheets',
    priority: Priority.high,
    deadline: DateTime.now().subtract(const Duration(days:1)),
    xp: 0,
    taskGroupId: 4,
    subjectId: 1,
    finished: true,
    finishedAt: DateTime.now().subtract(const Duration(days: 7)),
  ),
  Task(
    name: 'Scrub toilet',
    description: 'That thing is disgusting!',
    priority: Priority.high,
    deadline: DateTime.now().subtract(const Duration(days:1)),
    xp: 0,
    taskGroupId: 4,
    subjectId: 1,
    finished: false,
  )
];
