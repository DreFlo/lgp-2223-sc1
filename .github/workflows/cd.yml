name: Continuous Delivery
on:
  push:
    tags:
      - release/v*

permissions:
  write-all

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: src
    steps:
      # Checkout rep
      - name: Clone rep
        uses: actions/checkout@v3
      # Set up Flutter
      - name: Clone Flutter rep with master channel
        uses: subosito/flutter-action@v2
      # Get packages
      - name: Get Flutter packages
        run: flutter pub get
      # Generate l10n
      - name: Gen l10n
        run: flutter gen-l10n
      # Build free apk
      - name: Build free apk
        run: flutter build apk --obfuscate --split-debug-info ./debug/android/free/ --flavor free -t lib/main_free.dart
      # Build premium apk
      - name: Build premium apk
        run: flutter build apk --obfuscate --split-debug-info ./debug/android/premium/ --flavor premium -t lib/main_premium.dart
      # Message
      - name: iOS and web missing
        run: echo iOS and web missing
      # Get version number from flutter
      - name: Get version number
        id: read-version
        run: |
          VERSION=`cat pubspec.yaml | grep -m 1 'version: *' | cut -f2 -d" " | xargs`
          echo "version=$VERSION" >> $GITHUB_OUTPUT
      # Create release
      - name: Create release
        id: create-release
        uses: actions/create-release@v1
        with:
          draft: false
          prerelease: false
          release_name: v${{ steps.read-version.outputs.version }}
          body_path: src/CHANGELOG.md
          tag_name: latest
        env:
          GITHUB_TOKEN: ${{ github.token }}
      # Upload artifacts
      - name: Upload free apk
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: src/build/app/outputs/flutter-apk/app-free-release.apk
          asset_name: wokka.free.android.apk
          asset_content_type: application/x-authorware-bin
      - name: Upload premium apk
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: src/build/app/outputs/flutter-apk/app-premium-release.apk
          asset_name: wokka.android.apk
          asset_content_type: application/x-authorware-bin
      - name: Zip symbol files
        run: zip -r symbols.zip debug
      - name: Upload symbol zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: src/symbols.zip
          asset_name: symbols.zip
          asset_content_type: application/zip
      
      
