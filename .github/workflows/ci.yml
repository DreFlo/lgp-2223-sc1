name: Continuous Integration
on:
  workflow_dispatch:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  write-all

jobs:
  test-suite:
    name: Test Suite
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: src
    strategy:
      matrix:
        api-level: [29]
    steps:
      # Checkout rep
      - name: Clone rep
        uses: actions/checkout@v3
      # Setup Flutter
      - name: Clone Flutter rep with master channel
        uses: subosito/flutter-action@v2
      # Setup Emulator
      - name: AVD cache
        uses: actions/cache@v3
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}
      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."
      # Get packages
      - name: Get Flutter packages
        run: flutter pub get
      # Generate l10n
      - name: Generate l10n
        run: flutter gen-l10n
      # Generate environment variable
      - name: Generate environment variables
        run: flutter pub run build_runner build --delete-conflicting-outputs
        env:
          TMDB_API_KEY: ${{ secrets.TMDB_API_KEY }}
          GOOGLE_BOOKS_API_KEY: ${{ secrets.GOOGLE_BOOKS_API_KEY }}
          TMDB_API_URL: https://api.themoviedb.org/3/
          GOOGLE_BOOKS_API_URL: https://www.googleapis.com/books/v1/
      # Static analysis
      - name: Static analysis
        run: flutter analyze
      # Check code formatting
      - name: Check code formatting
        run: dart format --set-exit-if-changed --output=none .
      # Run unit tests
      - name: Run unit tests
        run: flutter test --coverage --no-pub
      # Run premium integration tests
      - name: Run premium integration tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: flutter test integration_test/premium --flavor premium
      # Run free integration tests
      - name: Run free integration tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          emulator-options: -no-snapshot-save -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: true
          script: flutter test integration_test/free --flavor free
      - name: Upload code coverage artifact
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report-lcov
          path: src/coverage/lcov.info
  post-coverage-report:
    name: Post Coverage Report
    runs-on: ubuntu-latest
    needs: test-suite
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup LCOV
        uses: hrishikesh-kadam/setup-lcov@v1
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: coverage-report-lcov
      - name: Report code coverage
        uses: zgosalvez/github-actions-report-lcov@v3
        with:
          coverage-files: lcov.info
          artifact-name: coverage-report
          github-token: ${{ secrets.GITHUB_TOKEN }}
          update-comment: true
          working-directory: src
      